{"ovYpOkFfGlY9":{"code":"// AUTHENTIC BRUTALISMUS 3000 STYLE TRACK\n// Based on research: 140-165 BPM, TR-909 processing, \"nu gabber post techno punk\"\n\n\n// === COMPLEX POLYRHYTHMIC HATS (TR-909 Style) ===\n$: s(\"hh(7,8), ~ hh(3,4,1)\")\n  .bank(\"RolandTR909\")\n  .hpf(8000)\n  .crush(choose([null, 3, 5]))\n  .gain(\"0.4 0.6 0.3 0.5\")\n  .pan(rand.range(-0.6, 0.6))\n  .cpm(155)\n\n// === \"NARCOTIC MELODIES\" LEAD (DAF-Influenced) ===\n$: note(\"<c3 eb3> <f3 g3>, <ab3 bb3>*2\")\n  .sound(\"sawtooth\")\n  .lpf(sine.range(400, 1200).slow(16))\n  .lpq(15) // High resonance\n  .shape(0.3)\n  .gain(0.6)\n  .delay(0.125)\n  .cpm(155)\n\n// === BRUTAL SUB BASS FOUNDATION ===\n$: note(\"c1*4, ~ eb1 ~ f1\")\n  .sound(\"sine\")\n  .lpf(120)\n  .distort(0.2)\n  .gain(0.8)\n  .cpm(155)\n\n// === AGGRESSIVE SNARE/CLAP PATTERN ===\n$: s(\"~ cp(5,8,2), ~ ~ cp ~\")\n  .bank(\"RolandTR909\")\n  .shape(0.4)\n  .hpf(choose([1000, 2000, 3000]))\n  .gain(\"0.7 0.5 0.8\")\n  .cpm(155)\n\n// === COMPLETE BRUTALISMUS 3000 AUTHENTIC TRACK ===\n$: stack(\n  // Complex TR-909 kick pattern (not straight 4/4)\n  s(\"bd(3,4), ~ bd ~, bd ~ ~ bd\")\n    .bank(\"RolandTR909\")\n    .distort(0.4)\n    .lpf(choose([null, 200, 400]))\n    .gain(\"0.9 0.7 0.8 0.6\"),\n    \n  // Polyrhythmic hi-hats with aggressive processing\n  s(\"hh(7,8), ~ hh(3,4,1)\")\n    .bank(\"RolandTR909\")\n    .hpf(8000)\n    .crush(choose([null, 3, 5]))\n    .gain(\"0.4 0.6 0.3 0.5\")\n    .pan(rand.range(-0.6, 0.6)),\n    \n  // Complex snare/clap polyrhythms\n  s(\"~ cp(5,8,2), ~ ~ cp ~, ~ cp ~ cp\")\n    .bank(\"RolandTR909\")\n    .shape(0.4)\n    .hpf(choose([1000, 2000]))\n    .gain(\"0.7 0.5 0.8 0.4\"),\n    \n  // Sub bass with characteristic filtering\n  note(\"c1*4, ~ eb1 ~ f1\")\n    .sound(\"sine\")\n    .lpf(120)\n    .distort(0.2)\n    .gain(0.8),\n    \n  // \"Narcotic melodies\" - DAF-influenced lead\n  note(\"<c3 eb3> <f3 g3>, <ab3 bb3>*2\")\n    .sound(\"sawtooth\")\n    .lpf(sine.range(400, 1200).slow(16))\n    .lpq(15) // High resonance for that harsh character\n    .shape(0.3)\n    .gain(0.6)\n    .delay(0.125),\n    \n  // Brutal mid-range stabs (punk influence)\n  note(\"~ <[c4 eb4 g4] ~ [f4 ab4 c5]>/2\")\n    .sound(\"sawtooth\")\n    .lpf(1500)\n    .lpq(8)\n    .distort(0.5)\n    .gain(0.4)\n    .sometimes(x => x.fast(2)),\n    \n  // Industrial noise texture (brutalist aesthetic)\n  s(\"~ ~ ~ noise\")\n    .speed(choose([0.3, 1, 2]))\n    .hpf(choose([400, 800, 1200]))\n    .lpf(choose([2000, 4000]))\n    .gain(0.2)\n    .rarely(x => x.rev())\n).cpm(155)\n\n// === TEMPO VARIATIONS (Authentic B3000 Range) ===\n// .cpm(140) - Slower, more menacing\n// .cpm(155) - \"Satan Was A Babyboomer\" tempo  \n// .cpm(160) - \"3ISBÄR\" / \"Romantika\" tempo\n// .cpm(165) - \"Europaträume\" tempo\n\n// === PROGRESSIVE BUILD VERSIONS ===\n\n// Version 1: Just the polyrhythmic foundation\n// $: s(\"bd(3,4)\").bank(\"RolandTR909\").distort(0.4).cpm(155)\n// $: s(\"hh(7,8)\").bank(\"RolandTR909\").hpf(8000).gain(0.5).cpm(155)\n\n// Version 2: Add the \"narcotic melodies\"  \n// $: note(\"<c3 eb3> <f3 g3>\").sound(\"sawtooth\").lpf(800).lpq(15).cpm(155)\n\n// Version 3: Full brutal version with more distortion\n// Change all .distort() values to 0.6+ and .lpq() to 20+ for extreme brutality\n\n// === AUTHENTIC BRUTALISMUS TECHNIQUES ===\n// - Polyrhythmic patterns using (pulses,steps,rotation) \n// - TR-909 samples via .bank(\"RolandTR909\")\n// - Aggressive but musical distortion (0.3-0.5 range)\n// - High resonance filtering (.lpq(10-20))\n// - Complex kick patterns (not straight 4/4)\n// - \"Narcotic melodies\" against brutal rhythms\n// - Mid-tempo hardcore range (140-165 BPM)\n","created_at":1749550340298,"id":"ovYpOkFfGlY9","collection":"user"},"JRg0O4WjGdET":{"code":"setcps(1.5) // 90 BPM (TOKYOPILL's tempo)\nawait samples('github:tidalcycles/Dirt-Samples/master')\n\n// G# minor scale for ethereal atmosphere\nlet etherealScale = \"g#3 minor\"\n\nstack(\n\n// ===== ETHEREAL ATMOSPHERE FOUNDATION =====\n// Dreamy ambient pads - the core of the ethereal sound\nnote(\"<g#2 d#2 e2 c#2>\").scale(etherealScale)\n  .sound(\"pad:2\")\n  .slow(16)\n  .attack(2)\n  .release(8)\n  .room(0.95) // Massive reverb for ethereal space\n  .delay(0.75)\n  .delaytime(0.375)\n  .delayfeedback(0.8)\n  .gain(0.5)\n  .pan(sine.slow(8).range(0.2,0.8))\n  .lpf(sine.slow(16).range(800,2000)),\n\n// Additional ethereal synth layer\nnote(\"<[g#3,b3,d#4] [d#3,f#3,a#3] [e3,g#3,b3] [c#3,e3,g#3]>\")\n  .sound(\"sawtooth\")\n  .slow(8)\n  .attack(1)\n  .release(4)\n  .room(0.9)\n  .delay(0.5)\n  .delaytime(0.25)\n  .gain(0.3)\n  .lpf(1200)\n  .vibrato(4, 0.1),\n\n// ===== ATMOSPHERIC BREAKS =====\n// Main break with heavy reverb processing\nsound(\"breaks165\")\n  .slow(2)\n  .shape(0.15) // Less distortion, more ethereal\n  .room(0.7) // Heavy reverb on breaks\n  .delay(0.3)\n  .delaytime(0.125)\n  .delayfeedback(0.4)\n  .hpf(200) // Remove mud, keep it floating\n  .lpf(sine.slow(8).range(2000,8000)) // Gentle filter sweep\n  .gain(0.7)\n  .restart(\"<x@31 x(3,8,5)>\")\n  .sometimes(x=>x.speed(\"0.5 1 1 1\")) // Occasional half-speed for atmosphere\n  .rarely(x=>x.reverse()),\n\n// Ethereal amen chops with extreme processing\nn(\"~ ~ ~ 3 4 ~ 6? ~ 8 ~ ~ ~ ~ 13 ~ 15 ~ 17? ~ 19 20? ~ ~ 23? ~ ~ ~ 27? ~ ~ 30 31?\")\n  .sound(\"amencutup\")\n  .slow(4)\n  .room(0.8) // Heavy reverb\n  .delay(0.5)\n  .delaytime(0.375)\n  .delayfeedback(0.6)\n  .gain(0.5)\n  .speed(\"1 0.5 1 2\") // Varied speeds for texture\n  .pan(rand.range(0.2,0.8))\n  .hpf(400)\n  .sometimes(x=>x.reverse()),\n\n// ===== ETHEREAL BASS =====\n// Subby reese bass with atmosphere\nnote(\"g#1 ~ ~ d#1 ~ e1 ~ c#1\")\n  .sound(\"jungbass:5\")\n  .slow(4)\n  .attack(0.1)\n  .release(0.5)\n  .shape(0.3) // Gentle saturation\n  .room(0.4)\n  .delay(0.2)\n  .lpf(sine.slow(4).range(300,800))\n  .gain(0.4)\n  .sometimes(x=>x.octave(1)), // Octave jumps\n\n// ===== ETHEREAL PERCUSSION =====\n// Soft, reverbed hi-hats\nsound(\"KorgMinipops_hh*8\")\n  .velocity(\"0.3 0.4 0.2 0.5 0.25 0.45 0.35 0.4\")\n  .speed(\"1 0.95 1.05 0.9\")\n  .room(0.6)\n  .delay(0.25)\n  .gain(0.3)\n  .pan(\"0 1 0.5 0.25 0.75\")\n  .hpf(4000)\n  .sometimes(x=>x.reverse()),\n\n// Ethereal kick pattern\nsound(\"RolandTR808_bd:2(3,8)\")\n  .slow(2)\n  .shape(0.1)\n  .room(0.3)\n  .hpf(60)\n  .lpf(200)\n  .gain(0.8)\n  .sometimes(x=>x.ply(\"1 2\")),\n\n// Atmospheric snare\nsound(\"~ MFB512_sd\")\n  .speed(0.9)\n  .room(0.5)\n  .delay(0.125)\n  .gain(0.6)\n  .shape(0.05),\n\n// ===== ETHEREAL TEXTURES =====\n// Ambient voice sample\nsound(\"~ speakspell:4\")\n  .slow(16)\n  .room(0.9)\n  .delay(0.75)\n  .delaytime(0.5)\n  .delayfeedback(0.7)\n  .speed(0.8)\n  .gain(0.4)\n  .pan(sine.slow(4).range(0,1)),\n\n// Ethereal FM synthesis touches\nsound(\"fm:4 ~ ~ fm:7\")\n  .slow(8)\n  .room(0.85)\n  .delay(0.5)\n  .gain(0.5)\n  .speed(sine.slow(16).range(0.5,2))\n  .pan(rand)\n  .sometimes(x=>x.ply(3)),\n\n// Ambient field recording/texture\nsound(\"insect:2\")\n  .slow(32)\n  .room(0.95)\n  .delay(0.8)\n  .gain(0.2)\n  .speed(0.5)\n  .pan(perlin.range(0,1))\n\n)\n\n// ===== MASTER ETHEREAL PROCESSING =====\n.cpm(90) // TOKYOPILL's tempo\n\n// Global ethereal effects\n.room(0.2) // Additional global reverb\n.delay(0.1) // Subtle global delay\n.lpf(12000) // Gentle high-frequency roll-off\n\n// Optional extreme ethereal breakdown effect (unmute for transitions)\n// .room(0.95).delay(0.5).delaytime(0.75).delayfeedback(0.8).lpf(sine.slow(8).range(400,2000)).shape(0.3)\n\n// Ethereal visualization\n.spiral({\n  colorizeInactive: 0.5,\n  steady: 0.95,\n  inset: -0.1,\n  stretch: 4,\n  size: 50,\n  thickness: 5,\n  playheadLength: 0.1,\n  color: \"cyan\" // Ethereal color\n})\n\n// @version 2.0 - Ethereal Atmospheric Jungle","created_at":1749551883114,"id":"JRg0O4WjGdET","collection":"user"},"ZZnIfc0RaeEx":{"code":"setcps(1)\nawait samples('github:tidalcycles/Dirt-Samples/master')\n\n\nstack(\n\nsound (\"RolandTR808_bd:2(3,8),YamahaRY30_bd(3,8)\")  .slow (\"2\") .shape (0.35) .sometimes(x=>x.ply(\"1 2\")) .hpf(80) .hpq(1) .restart(\"<x@15 x(3,8,5)>\"),\n//  Layering up my kicks using the comma the first one has more lowend the second is more toppy. \n  // using : to change the sample \n  // shape is adding a little bit of distortion to thicken the kicks up. \n  //hpf is highpassing the kick at 80hz to take out subb frequencies so it doesnt interfere with the main bassline\n  // restart is saying on the 15th cycle do a fill\n  // sometimes is saying 50% of the time randomly glitch the kicks\n  \nsound (\"~ MFB512_sd\") .speed(1.2) .adsr(\"0:0.125:0:0\") .shape (0.12),\n// simple snare to keep the time \n  // adsr is being used to change the length of the sample here im making it short and snappy\n\n\nsound (\"KorgMinipops_hh*8\") .velocity(\"0.45 0.5 0.3 0.56 0.34 0.6 0.5 0.56\") .speed (\"1 0.9 0.97 0.59 0.89 0.92 0.86 -1\") \n.gain (0.43) .jux(rev)\n .hush \n  ,  \n// hi hats \n //using velocity and patterning it so that its playing different velocities to give them impression of something a bit more human and less static \n  // speed is also being patterned to change the pitch and give a human feel if you tap your desk like a drum pattern you will hear different pitches and velocity \n// jux rev for stereo movement \n  \nn (\"~ ~ ~ 3 4 ~ 6? ~ 8 ~ ~ ~ ~ 13 ~ 15 ~ 17? ~ 19 20? ~ ~ 23? ~ ~ ~ 27? ~ ~ 30 31?\")\n  .sound (\"amencutup\") .slow (4) .adsr (\"0:0.125:0.1:0\") .gain (0.8)\n  .almostNever(x=>x.ply(\"1 2\")) .rarely(x=>x.room(\"4\")) \n.juxBy(\"0.1 1\", rev)  .speed(1.1)\n  // .hush\n\n  // n is being used to select different samples from the amencutup folder i am then using it sporadically as the supporting fill for the main break \n  // almostNever ply means im glitching out the amen very rarely but this adds variation\n  // rarely room with a value of 4 means that its going to be adding a loaaad of reverb which acts as a nice background layer adding further complexity \n  ,\n  \nsound (\"breaks165\") .slow (2) .shape (0.4) \n  .clip (1)\n  .restart(\"<x@31 x(3,8,5)>\")\n.almostNever(x=>x.ply(\"1 2\"))\n// playing a break loop over and over again this is the main break \n  // restart is saying every 31 cycles play a euclidian rhythm which acts as a fill \n//almostNever ply is saying glitch the main break at random\n  // .hush\n  ,\n\n sound (\" ~ fm:4(3,8,7)\")  .slow(4) .gain (1) .delay (0.25) .hpf(900)\n  .clip(1.5)\n  .sometimes(x=>x.ply(2)) \n// this is a break fill im playing to make the breaks feel more complicated overall \n  // .hush\n  ,\n  \nnote (\" f1(3,8,4) f1(3,8,7)\").sound (\"jungbass:4\") .slow (4) .attack (0.2)\n  .speed(saw.slow(\" 2 4\").range(2,1)) .shape(0.97) .hpf (120) \n  .adsr(\"0.1:1:1.1:0.46\")\n  // .rarely(add(note(\"3\")))\n  .crush(8)\n  .clip(1)\n  .gain (0.16)\n   .hpf (sine.range(100,200))\n  // .hush\n  \n// the main bassline\n  // using euclidian rhythms for the bassline \n  // the speed function is playing the actually melody and im doing this using a saw LFO so it pitches down from 2 to 1 \n  // the shape function is what is giving this sample character and texture that it has. the sample is being heavily distorted here\n  // i have crush which i keep muted but will sometimes activate to add extra distortion has a nice bitcrushing effect \n  // clip is being used so that the notes of the bass dont start to overlap\n  // have a hpf (highpass filter) which I keep muted unless I want to start introducing or removing the bass\n,\n\n note (\"a1 ~ d1? ~\").sound (\"pad\") .clip(1) .slow (16) .hpf (300) .room (0.7) .delay (0.8),\n//simple background atmosphere that I introduce the song with. it has a lot of reverb and delay and is the background tapestry that supports the tune\n\n  \nsound (\" ~ speakspell:4\") .slow (8) .delay (0.125)\n  // .clip (1)\n//classic sample here thats playing every 8 cycles \n  \n\n)\n\n  \n.cpm(82.5) // MASTER TEMPO\n\n// .bpf(sine.slow(8).range(450,1200)) .room (0.9) .delay(0.25) .shape(0.54) .ply(\"4\") \n\n  // using this as a way to add tension when I want to break things up and create a mess. and then mute it again just before a new cycle comes in to \n  // bring everything back. it sort of acts as a build up\n\n  .spiral({colorizeInactive: 1,steady:0.99,inset:-0.05,stretch:3,size:40,thickness:10,playheadLength: 0})\n\n\n// @version 1.0","created_at":1749553124819,"id":"ZZnIfc0RaeEx","collection":"user"},"7bDJfBYIj99T":{"code":"setcps(1.5) // 90 BPM (TOKYOPILL's tempo)\nawait samples('github:tidalcycles/Dirt-Samples/master')\n\nstack(\n\n// ===== CORE RHYTHM SECTION (keeping your original beats audible) =====\n\n// Kicks - keeping your original pattern\n// sound(\"RolandTR808_bd:2(3,8),YamahaRY30_bd(3,8)\")\n//   .slow(\"2\")\n//   .shape(0.2) // Reduced from 0.35\n//   .sometimes(x=>x.ply(\"1 2\"))\n//   .hpf(80)\n//   .hpq(1)\n//   .gain(0.9) // Increased gain\n//   .restart(\"<x@15 x(3,8,5)>\"),\n\n// // Snare - more present\n// sound(\"~ MFB512_sd\")\n//   .speed(1.2)\n//   .adsr(\"0:0.125:0:0\")\n//   .shape(0.08)\n//   .gain(0.8) // Increased from original\n//   .room(0.2), // Just a touch of reverb\n\n// Hi-hats - clearer but with ethereal touch\n// sound(\"KorgMinipops_hh*8\")\n//   .velocity(\"0.45 0.5 0.3 0.56 0.34 0.6 0.5 0.56\")\n//   .speed(\"1 0.9 0.97 0.59 0.89 0.92 0.86 -1\")\n//   .gain(0.5)\n//   .jux(rev)\n//   .room(0.3) // Added subtle reverb\n//   .delay(0.1), // Subtle delay\n\n// Main break - audible with ethereal processing\nsound(\"breaks165\")\n  .slow(2)\n  .shape(0.3) // Reduced from 0.4\n  .clip(1)\n  .restart(\"<x@31 x(3,8,5)>\")\n  .almostNever(x=>x.ply(\"1 2\"))\n  .gain(0.9)\n  .room(0.4) // Moderate reverb\n  .delay(0.2) // Subtle delay\n  .lpf(8000), // Gentle high cut\n\n// Amen fills\nn(\"~ ~ ~ 3 4 ~ 6? ~ 8 ~ ~ ~ ~ 13 ~ 15 ~ 17? ~ 19 20? ~ ~ 23? ~ ~ ~ 27? ~ ~ 30 31?\")\n  .sound(\"amencutup\")\n  .slow(4)\n  .adsr(\"0:0.125:0.1:0\")\n  .gain(0.7)\n  .almostNever(x=>x.ply(\"1 2\"))\n  .rarely(x=>x.room(\"4\"))\n  .juxBy(\"0.1 1\", rev)\n  .speed(1.1),\n\n// FM fills\nsound(\"~ fm:4(3,8,7)\")\n  .slow(4)\n  .gain(0.8)\n  .delay(0.25)\n  .hpf(900)\n  .clip(1.5)\n  .sometimes(x=>x.ply(2)),\n\n// ===== BASS (more present) =====\n// note(\"f1(3,8,4) f1(3,8,7)\")\n//   .sound(\"jungbass:4\")\n//   .slow(4)\n//   .attack(0.2)\n//   .speed(saw.slow(\"2 4\").range(2,1))\n//   .shape(0.7) // Reduced from 0.97\n//   .hpf(120)\n//   .adsr(\"0.1:1:1.1:0.46\")\n//   .crush(8)\n//   .clip(1)\n//   .gain(0.3) // Increased from 0.16\n//   .room(0.1), // Just a touch of space\n\n// ===== ETHEREAL ATMOSPHERE LAYERS =====\n\n// Main ethereal pad (subtle)\n// note(\"a1 ~ d1? ~\")\n//   .sound(\"pad\")\n//   .clip(1)\n//   .slow(16)\n//   .hpf(300)\n//   .room(0.7)\n//   .delay(0.8)\n//   .gain(0.4), // More present than original\n\n// Additional ethereal layer (new)\n// note(\"<g#2 d#2 e2 c#2>\")\n//   .sound(\"sawtooth\")\n//   .slow(8)\n//   .attack(2)\n//   .release(4)\n//   .lpf(1000)\n//   .room(0.8)\n//   .delay(0.5)\n//   .gain(0.2) // Subtle presence\n//   .pan(sine.slow(8).range(0.3,0.7)),\n\n// Speakspell with ethereal processing\n// sound(\"~ speakspell:4\")\n//   .slow(8)\n//   .delay(0.4) // More subtle than original\n//   .room(0.5)\n//   .gain(0.6),\n\n// Ethereal texture layer (very subtle)\n// sound(\"cosmicg:2\")\n//   .slow(16)\n//   .speed(0.5)\n//   .room(0.9)\n//   .delay(0.6)\n//   .gain(0.15)\n//   .pan(perlin.range(0,1))\n//   .hpf(400)\n\n)\n\n.cpm(90) // TOKYOPILL tempo\n\n// Global subtle ethereal processing\n.room(0.1) // Very subtle global reverb\n.delay(0.05) // Tiny global delay\n\n// ETHEREAL BUILD EFFECT - unmute for transitions/builds\n// .bpf(sine.slow(8).range(450,2000)).room(0.8).delay(0.4).shape(0.3)\n\n.spiral({\n  colorizeInactive: 0.8,\n  steady: 0.99,\n  inset: -0.05,\n  stretch: 3,\n  size: 40,\n  thickness: 10,\n  playheadLength: 0\n})\n\n// @version 2.1 - Balanced Ethereal Mix","created_at":1749553580081,"id":"7bDJfBYIj99T","collection":"user"},"nwecARV5QxlJ":{"code":"/*\n  @title   Array (Lil Data Edit)\n  @by      DJ_Dave\n  @album   Intercell [The Live Code Edits]\n  @license CC BY-NC-SA (code)\n  @url     https://instagram.com/lildata.music\n*/\n\n// load sample pack...\nsamples({\n  build_bass:  ['snd/bass/build_0.mp3', 'snd/bass/build_1.mp3', 'snd/bass/build_2.mp3', 'snd/bass/build_3.mp3'],\n  build_synth: ['snd/synth/build_0.mp3','snd/synth/build_1.mp3','snd/synth/build_2.mp3','snd/synth/build_3.mp3'],\n  build_vox:   ['snd/vox/build_0.mp3',  'snd/vox/build_1.mp3',  'snd/vox/build_2.mp3',  'snd/vox/build_3.mp3'],\n  drop_vox:    ['snd/vox/drop_0.mp3',   'snd/vox/drop_1.mp3',   'snd/vox/drop_2.mp3',   'snd/vox/drop_3.mp3',\n                'snd/vox/drop_4.mp3',   'snd/vox/drop_5.mp3',   'snd/vox/drop_6.mp3',   'snd/vox/drop_7.mp3',\n                'snd/vox/drop_8.mp3'],\n  verse_vox:   ['snd/vox/verse_0.mp3',  'snd/vox/verse_1.mp3',  'snd/vox/verse_2.mp3',  'snd/vox/verse_3.mp3',\n                'snd/vox/verse_4.mp3',  'snd/vox/verse_5.mp3',  'snd/vox/verse_6.mp3',  'snd/vox/verse_7.mp3',\n                'snd/vox/verse_8.mp3'],\n  sub:    ['snd/bass/sub_0.mp3',  'snd/bass/sub_1.mp3',  'snd/bass/sub_2.mp3'],\n  bass:   ['snd/bass/bass_0.mp3', 'snd/bass/bass_1.mp3', 'snd/bass/bass_2.mp3'],\n  kick:    'snd/perc/kick.mp3',\n  sn:      'snd/perc/sn.mp3',\n  cp:     ['snd/perc/cp.mp3', 'snd/perc/cp2.mp3'],\n  tom:     'snd/perc/tom.mp3',\n  hc:      'snd/perc/hc.mp3',\n  shaker:  'snd/perc/shaker.mp3',\n  break:   'snd/perc/break.mp3',\n  guitar: ['snd/perc/guit1.mp3', 'snd/perc/guit2.mp3'],\n}, 'github:lil-data/dj_dave-array_remix/main/');\n\n// hack: https://github.com/tidalcycles/strudel/issues/119\nconst loopAx = register('loopAx', \n  (l, pat) => pat.loopAt(l).chop(l*8).legato(1).mul(speed(0.99))\n);\nconst setbpm = t => setcps(t/4/60)\n\nsetbpm(140)\n\n/*\n  So I try...\n*/\nlet build = stack(\n  n(\"<0 1 2 3>\").s(\"bass\").bank(\"build\").loopAx(4),\n  n(\"<0 1 2 3>\").s(\"synth\").bank(\"build\").loopAx(4),\n  n(\"<0 1 2 3>\").s(\"vox\").bank(\"build\").loopAx(4),\n)\n\nlet predrop = n(\"0\").s(\"vox\").bank(\"drop\").loopAx(2)\n\n/*\n  I swear to god I always thought in the end I’d get you back\n  Now every day I see your face you give me a heart attack\n*/\nlet drop = stack(\n  n(run(8).add(1).slow(8)).s(\"vox\").bank(\"drop\").loopAx(2)\n    .mask(cat([\n      \"1!6 0!2\",         \"1!3 0 1!2 0 1\",\n      \"1!6 0!2\",         \"1\",\n      \"0 1!2 0 1!2 0 1\", \"1\",\n      \"0 1 0 1 0 1 0!2\", \"1!7 0\"\n    ]).slow(16)),\n  stack(\n    stack(\n      s(\"sub(5,16)\").end(0.95).mask(\"[0 1]/8\"),\n      s(\"kick(5,16)\"),\n      s(\"cp(5,16)\").late(3/32),\n      s(\"tom(5,16)\").end(0.95).late(4/32)\n    ).slow(2)\n    .note(\"[0 1]/4\".add(36))\n    .mask(cat([\n      \"[1 [1 0!7]]\",\n      \"[1 [1 0] 0 1 [1 0] 0 1!2]\",\n      \"[1 [1 0]]\",\n      \"[1 [1 0] 0 1 [1 0] 0!3]\", \n    ]).slow(8))),\n  stack(\n    s(\"guitar\").n(\"[0 1]/8\").loopAx(0.5)\n      .mask(\"0!3 1 0!11 1\".slow(8)),\n    s(\"break\").loopAx(0.5).mask(\"0!15 1\".slow(8)),\n    s(\"hc*4\").ply(cat([\n      \"[~!6 2!7 ~!3]\",\n      \"[[9 ~] [6 ~]] 3 3 2\",\n      \"2 3 [[6 ~] [9 ~]] ~\",\n      \"[2 3] ~!3\"\n    ]).slow(8))).mask(\"[1 0]/16\"),\n  stack(\n    s(\"shaker\").loopAx(2),\n    s(\"break\").loopAx(0.5).mask(\"[0!3 [0 1]] [0 [0 1] 0!2]\".slow(8)),\n    s(\"cp:1\").struct(\"[~!7 x] ~\".slow(4)).gain(0.6),\n    s(\"sn\").struct(cat([\n      \"~ x ~ [~ x] [~!15 x] [x ~ ~ x] [~ x ~ x] x\",\n      \"~ x ~ [~*2 x*2]!2 [~ x ~ ~] ~ [~*2 x*2]\",\n      \"~ x ~ [~ x] [~!15 x] x ~ ~\",\n      \"~ x ~ [~*2 x*2]!2 ~!3\",\n    ]).slow(8))\n  ).mask(\"[0 1]/16\"),\n)\n\n/*\n  Where’d you go?\n  I saw your face and moments later I was on the floor \n  (I swear to god I always thought in the end I’d get you back)\n  Putting the pieces together but still you needed more\n  It’s still so hard to see you cry I just want answers for\n  What else I could possibly give you now it’s all for show\n  Where’d you go?\n  Pieces together but still you\n  On the floor / needed more\n  Hard to see you cry I just want\n  Answers for / wherе’d you go?\n  Face and moments later I was\n  On thе floor, where’d you go? Where’d you go? Where’d you go?\n*/\nlet verse = stack(\n  n(run(8).slow(8)).s(\"vox\").bank(\"verse\").loopAx(2),\n  s(\"bass:[0 0 [0 1] [1 2]]/8, sub:[1 2]/8\")\n    .note(cat([\n      \"[0!7 7] [1!3 5] [0!7 12] [7 4 5 [5 12]]\",\n      \"[0 [0 .. 7]] [1!3 5] [0!7 12] [7 4 5 [5 2]]\"\n    ]).slow(8)).add(36)\n    .struct(cat([\n      \"x@3!5 x x@3!5 x\",\n      \"x@3!5 x x@3!5 x\", \n      \"[[x@3 x@3 x@2] [x*8]] [x@3!5 x]\",\n      \"x@3!5 x x@3!5 x\",\n    ]).slow(8))\n    .mask(cat([\"1\",\"1\",\"1 0 0 [0 1]\",\"1\",\"1\",\"1\",\"1\",\"1\"]).slow(8))\n    .slow(2)\n)\n\nlet postverse = stack(\n  n(\"[8 ~]/2\").s(\"vox\").bank(\"verse\").loopAx(2),\n  n(\"[~ 0]/2\").s(\"vox\").bank(\"drop\").loopAx(2),\n  s(\"bass:2, sub:2\").note(\"[2 5]\").add(36)\n    .struct(\"[~@2 x@3!10]\")\n    .mask(\"[1!7 0]\")\n    .slow(4)\n)\n\narrange(\n  [16, build],\n  [2, predrop],\n  [16, drop],\n  [16, verse],\n  [4, postverse]\n).fontFamily(\"x3270\")\n  .theme(\"[teletext algoboy terminal abcdef androidstudio atomone aura bespin darcula dracula duotoneDark eclipse githubDark gruvboxDark materialDark nord okaidia solarizedDark sublime tokyoNight tokyoNightStorm vscodeDark xcodeDark bbedit duotoneLight githubLight gruvboxLight materialLight noctisLilac solarizedLight tokyoNightDay xcodeLight]/54\")\n  .color(\"[fuschia [aquamarine dodgerblue] [hotpink] blueviolet deeppink [cornsilk indigo] crimson cyan]/27\")\n  .punchcard({fold:1,flipTime:1,vertical:1})\n\n/*\n▓▓█▓▓█▓█▓▓▓▓▓▓▓▓████▓▓▓█▓█▓▓▓▓▓▓▓▓▓▒▓▒▒▒▒▓███████▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▒▓▒▒▒▒░░░░░░░░░░░\n▓▓▓▓██▓█▓▓▓▓▓▓▓▓███▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▒▒▓▒▒░▒▓████████▓▓▓▓▓▒▒▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▒▓▓▒▒▒▒░░░░░░░░░░\n▓▓▓██▓██▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒░░▓██████████████▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▓▓▓▒▒▒░░░░░░░░░░\n▓▓█▓▓██▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▒▒░▒▓█████████████████▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▒▓▓▓▓▒▒▒▒░░░░░░░░\n▓█▓▓██▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▒░░▒████████████████▓▓███▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▒▒▒▒░░░░░░\n█▓▓██▓▓▓▓▓▒▓███▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░▒████████████████▓▓▓▓██▓▒▒▓▓▓▓▓▓█▓░▓█▓▓▓▓▓▒▒▒▒░░░░░\n█▓██▓▓▓▓▓▓▓███▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒░░▒███████████████▓▓▓▓▓▒▒▒▓▓▒▓▓▓▓▓▓█▓▒▓██▓▓▓▓▒▒▒▒░░░░░\n███▓▓▓▓▓▓▓▓▓█▓▓▓▒▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒░░░▒█████████████▓▓▓▓▒▒▒▒▒░▒▓▓▒▓▓▓▓██▒▒████▓▓▓▓▒▒▒░░░░░\n███▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒░░░░▓███████████▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓████▒▓████▓▓▓▓▒▒▒░░░░░\n█▓▓▓▓▓▓█▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░▒▓█▓███████████▓▓▓▓▓▓▓▒▒░▒▓█▓▓▓███▓▒▓████▓▓▓▓▓▒▒░░░░░\n█▓▓▓▓███▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▓▓▒▒▒▒▒▒░░░░▒▓▓▓▓██████▓▓██▓▓▓▓▓▒▒▒▒▒▒▓▓█▓▓███▓▒█████▓▓▓▓▓▒▒░░░░░\n██▓▓████▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░▓▓▓▓▓▓▓▓▓██▓▓▓█▓▓▓▓▓▒▒▒▒▒░▒▒▓▓▓▓▓▓▒▒██████▓▓▓▓▓▒▒░░░░\n█▓██████▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒░░░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓█▓▓▓▒▓▓█████▓▓▓▓▓▓▒▒░░░\n███████▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▓▒▒▒▒▒░░░▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▓▓▓█▓▓▓▓▓▓▓▓▓▓▒▒░░\n██████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▒▒▒░░▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░\n█████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▒▒▒░▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒\n█████▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▒▒▒▒░░▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n████▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n███▓▒▒▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n██▓▒▒▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n██▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▒▓▒▒▒▒▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n█▓▒▒▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▒▒▓▒▒▒▓▓▓▓▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓▓▓█████▓▓▓▓▓▓▓▓▓▓\n▓▓▒▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▒▒▒▒▓▓▓▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓██████▓▓▓▓▓▓▓▓▓▓▓\n▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▒▒▓▓█▓▓▓▓▓███████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▓▓▓▒▒▒▓████▓▓▓▓▓▓▓▓▓████\n▓▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓█████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▒▒▓████▓▓▓▓▓▓▓▓█████\n▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓██▓▓▓▓▓███████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓█████████████████\n▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▒▒▓▓▓▓██▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓█████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▒▓▓▓▓█▓▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓█████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███▓▓▓▓▓▓███▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▒▒█████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████▓▓▓▓▓▓██▓▓▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▒▒▓████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓█▓▓▓██▓████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▒▒▒▓███████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓█▓████████▓▓▓▓▓▓▓▓▓▓███████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓███████▓▓█\n▓▓▓▓▓▓▓▓▓▓▓▓██▓█████████▓▓▓▓▓█▓▓▓████████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒\n▒▓▓▓▓▓▓▓▓▓███████████████▓▓▒▓▓▓▓▓█████████▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒░░\n▒▓▓▓▓▓▓▓▓█████████████████▓▓▒▓▓▓▓▓████████▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒░░\n▒▓▓▓▓▒▓▓███████████████████▓▓▓▓▓▓▓█████████▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒░\n▒▓▓▓▓▓▓█████████████████████▓▓▒▓▓▓▓▓███████▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░▒▓▓▓▓▓▓▓▓▒▒▒▒\n▒▓▓▓▒▓██████▓████████████████▓▓▒▒▓▓▓███████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒▒▒▓\n▒▓▓▒▓▓████████████████████████▓▓▒▒▓▓███████▓██████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓\n▒▒▓▓▓██████████████████████████▓▓▒▒▓▓██████▓▓██████████▓▓▓▓▓▓▓▓▓▓▓▓▓████████▒▓█▓▓▓██████▓▓\n▒▒▓▓▓███████████████████████████▓▓▒▒▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓██████████▓▓███▓▓███████\n▒▒▓▓█████████████████████████████▓▓▒▒▓▓▓███████████████▓▓▓▓▓▓▓▓▓▓████████████▒▓████▓▓▓▓▓▓▓\n▒▒▒▓█████████████████████████████▓▓▓▒▒▓▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓███▓▓▓▓▒▒▓▓▓▓▒▓▒▒▓▓▓\n▒▒▒▓████████████████████████████▓▓▓▓▓▒▒▓▓▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▒▒▒▒▒░▒\n*/\n\n\n// @version 1.0","created_at":1749554197825,"id":"nwecARV5QxlJ","collection":"user"},"bY3hcSo6iL7W":{"code":"//@title djdave tiktok remake (by osc)\n\nsetCps(150/60/4)\n\nsamples('github:oscarbeamish/samples')\nsamples('github:tidalcycles/dirt-samples')\n\nconst Structures = [\n  \"{x ~!6 x ~ ~ x ~!3 x ~}%16\",\n  \"{x*4}\",\n  \"{~}\",\n]\n\nconst PG = [\n  \"{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}\",\n  \"{0.3 0.8}%8\",\n  \"{0.8}\"\n]\n\nconst beat = 1\n\nDRUMS: stack(\n  s(\"tech:5\").postgain(5).pcurve(2).pdec(1).struct(pick(Structures, beat)),\n  s(\"[ ~ cp]\").bank(\"KorgDDM110\").speed(1).fast(2).postgain(0.15).lpf(3000),\n// ---\n\n  s(\"breaks165\").gain(0.6).loopAt(1).chop(16).fit().postgain(pick(PG, beat)),\n  \n)\n._punchcard({width: 600})\nBASSLINE: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n.struct(\"x*16\")\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(0.075).gain(0.75) .hpf(150)\n.lpf(slider(1170.05, 350, 2000))\n.postgain(pick(PG, beat))\n\nVOXCHOP1: s(\"heartbeat:0\".slow(2))\n.note(\"g#1\")\n.slice(8, \"<5 6>\".fast(2))\n.chop(32).cut(1).loopAt(4)\n.room(2)\n.gain(\"<0.6 1.6>\".slow(2))\n.lpf(slider(600, 600, 4000))\n.postgain(pick(PG, beat))\n._scope({width: 600})\nVOXCHOP2: s(\"heartbeat:<1 0>\".slow(2))\n.striate(\"<2 4>\".slow(2)).ply(\"[4|8]\".fast(8))\n.note(\"a1\")\n.phaser(8).room(2).rfade(30)\n.cut(1).clip(1)\n.lpf(slider(600, 600, 5000))\n.postgain(1.75)\n.room(1)\n._scope({width: 600})\nall(x=> x.cut(2))","created_at":1749554496740,"id":"bY3hcSo6iL7W","collection":"user"},"iLknhn7_Livv":{"code":"/*\n  @title   Array (Lil Data Edit)\n  @by      DJ_Dave\n  @album   Intercell [The Live Code Edits]\n  @license CC BY-NC-SA (code)\n  @url     https://instagram.com/lildata.music\n*/\n\n// load sample pack...\nsamples({\n  build_bass:  ['snd/bass/build_0.mp3', 'snd/bass/build_1.mp3', 'snd/bass/build_2.mp3', 'snd/bass/build_3.mp3'],\n  build_synth: ['snd/synth/build_0.mp3','snd/synth/build_1.mp3','snd/synth/build_2.mp3','snd/synth/build_3.mp3'],\n  build_vox:   ['snd/vox/build_0.mp3',  'snd/vox/build_1.mp3',  'snd/vox/build_2.mp3',  'snd/vox/build_3.mp3'],\n  drop_vox:    ['snd/vox/drop_0.mp3',   'snd/vox/drop_1.mp3',   'snd/vox/drop_2.mp3',   'snd/vox/drop_3.mp3',\n                'snd/vox/drop_4.mp3',   'snd/vox/drop_5.mp3',   'snd/vox/drop_6.mp3',   'snd/vox/drop_7.mp3',\n                'snd/vox/drop_8.mp3'],\n  verse_vox:   ['snd/vox/verse_0.mp3',  'snd/vox/verse_1.mp3',  'snd/vox/verse_2.mp3',  'snd/vox/verse_3.mp3',\n                'snd/vox/verse_4.mp3',  'snd/vox/verse_5.mp3',  'snd/vox/verse_6.mp3',  'snd/vox/verse_7.mp3',\n                'snd/vox/verse_8.mp3'],\n  sub:    ['snd/bass/sub_0.mp3',  'snd/bass/sub_1.mp3',  'snd/bass/sub_2.mp3'],\n  bass:   ['snd/bass/bass_0.mp3', 'snd/bass/bass_1.mp3', 'snd/bass/bass_2.mp3'],\n  kick:    'snd/perc/kick.mp3',\n  sn:      'snd/perc/sn.mp3',\n  cp:     ['snd/perc/cp.mp3', 'snd/perc/cp2.mp3'],\n  tom:     'snd/perc/tom.mp3',\n  hc:      'snd/perc/hc.mp3',\n  shaker:  'snd/perc/shaker.mp3',\n  break:   'snd/perc/break.mp3',\n  guitar: ['snd/perc/guit1.mp3', 'snd/perc/guit2.mp3'],\n}, 'github:lil-data/dj_dave-array_remix/main/');\n\n// hack: https://github.com/tidalcycles/strudel/issues/119\nconst loopAx = register('loopAx', \n  (l, pat) => pat.loopAt(l).chop(l*8).legato(1).mul(speed(0.99))\n);\nconst setbpm = t => setcps(t/4/60)\n\nsetbpm(140)\n\n/*\n  So I try...\n*/\nlet build = stack(\n  n(\"<0 1 2 3>\").s(\"bass\").bank(\"build\").loopAx(4),\n  n(\"<0 1 2 3>\").s(\"synth\").bank(\"build\").loopAx(4),\n  n(\"<0 1 2 3>\").s(\"vox\").bank(\"build\").loopAx(4),\n)\n\nlet predrop = n(\"0\").s(\"vox\").bank(\"drop\").loopAx(2)\n\n/*\n  I swear to god I always thought in the end I’d get you back\n  Now every day I see your face you give me a heart attack\n*/\nlet drop = stack(\n  n(run(8).add(1).slow(8)).s(\"vox\").bank(\"drop\").loopAx(2)\n    .mask(cat([\n      \"1!6 0!2\",         \"1!3 0 1!2 0 1\",\n      \"1!6 0!2\",         \"1\",\n      \"0 1!2 0 1!2 0 1\", \"1\",\n      \"0 1 0 1 0 1 0!2\", \"1!7 0\"\n    ]).slow(16)),\n  stack(\n    stack(\n      s(\"sub(5,16)\").end(0.95).mask(\"[0 1]/8\"),\n      s(\"kick(5,16)\"),\n      s(\"cp(5,16)\").late(3/32),\n      s(\"tom(5,16)\").end(0.95).late(4/32)\n    ).slow(2)\n    .note(\"[0 1]/4\".add(36))\n    .mask(cat([\n      \"[1 [1 0!7]]\",\n      \"[1 [1 0] 0 1 [1 0] 0 1!2]\",\n      \"[1 [1 0]]\",\n      \"[1 [1 0] 0 1 [1 0] 0!3]\", \n    ]).slow(8))),\n  stack(\n    s(\"guitar\").n(\"[0 1]/8\").loopAx(0.5)\n      .mask(\"0!3 1 0!11 1\".slow(8)),\n    s(\"break\").loopAx(0.5).mask(\"0!15 1\".slow(8)),\n    s(\"hc*4\").ply(cat([\n      \"[~!6 2!7 ~!3]\",\n      \"[[9 ~] [6 ~]] 3 3 2\",\n      \"2 3 [[6 ~] [9 ~]] ~\",\n      \"[2 3] ~!3\"\n    ]).slow(8))).mask(\"[1 0]/16\"),\n  stack(\n    s(\"shaker\").loopAx(2),\n    s(\"break\").loopAx(0.5).mask(\"[0!3 [0 1]] [0 [0 1] 0!2]\".slow(8)),\n    s(\"cp:1\").struct(\"[~!7 x] ~\".slow(4)).gain(0.6),\n    s(\"sn\").struct(cat([\n      \"~ x ~ [~ x] [~!15 x] [x ~ ~ x] [~ x ~ x] x\",\n      \"~ x ~ [~*2 x*2]!2 [~ x ~ ~] ~ [~*2 x*2]\",\n      \"~ x ~ [~ x] [~!15 x] x ~ ~\",\n      \"~ x ~ [~*2 x*2]!2 ~!3\",\n    ]).slow(8))\n  ).mask(\"[0 1]/16\"),\n)\n\n/*\n  Where’d you go?\n  I saw your face and moments later I was on the floor \n  (I swear to god I always thought in the end I’d get you back)\n  Putting the pieces together but still you needed more\n  It’s still so hard to see you cry I just want answers for\n  What else I could possibly give you now it’s all for show\n  Where’d you go?\n  Pieces together but still you\n  On the floor / needed more\n  Hard to see you cry I just want\n  Answers for / wherе’d you go?\n  Face and moments later I was\n  On thе floor, where’d you go? Where’d you go? Where’d you go?\n*/\nlet verse = stack(\n  n(run(8).slow(8)).s(\"vox\").bank(\"verse\").loopAx(2),\n  s(\"bass:[0 0 [0 1] [1 2]]/8, sub:[1 2]/8\")\n    .note(cat([\n      \"[0!7 7] [1!3 5] [0!7 12] [7 4 5 [5 12]]\",\n      \"[0 [0 .. 7]] [1!3 5] [0!7 12] [7 4 5 [5 2]]\"\n    ]).slow(8)).add(36)\n    .struct(cat([\n      \"x@3!5 x x@3!5 x\",\n      \"x@3!5 x x@3!5 x\", \n      \"[[x@3 x@3 x@2] [x*8]] [x@3!5 x]\",\n      \"x@3!5 x x@3!5 x\",\n    ]).slow(8))\n    .mask(cat([\"1\",\"1\",\"1 0 0 [0 1]\",\"1\",\"1\",\"1\",\"1\",\"1\"]).slow(8))\n    .slow(2)\n)\n\nlet postverse = stack(\n  n(\"[8 ~]/2\").s(\"vox\").bank(\"verse\").loopAx(2),\n  n(\"[~ 0]/2\").s(\"vox\").bank(\"drop\").loopAx(2),\n  s(\"bass:2, sub:2\").note(\"[2 5]\").add(36)\n    .struct(\"[~@2 x@3!10]\")\n    .mask(\"[1!7 0]\")\n    .slow(4)\n)\n\narrange(\n  [16, build],\n  [2, predrop],\n  [16, drop],\n  [16, verse],\n  [4, postverse]\n).fontFamily(\"x3270\")\n  .theme(\"[teletext algoboy terminal abcdef androidstudio atomone aura bespin darcula dracula duotoneDark eclipse githubDark gruvboxDark materialDark nord okaidia solarizedDark sublime tokyoNight tokyoNightStorm vscodeDark xcodeDark bbedit duotoneLight githubLight gruvboxLight materialLight noctisLilac solarizedLight tokyoNightDay xcodeLight]/54\")\n  .color(\"[fuschia [aquamarine dodgerblue] [hotpink] blueviolet deeppink [cornsilk indigo] crimson cyan]/27\")\n  .punchcard({fold:1,flipTime:1,vertical:1})\n\n/*\n▓▓█▓▓█▓█▓▓▓▓▓▓▓▓████▓▓▓█▓█▓▓▓▓▓▓▓▓▓▒▓▒▒▒▒▓███████▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▒▓▒▒▒▒░░░░░░░░░░░\n▓▓▓▓██▓█▓▓▓▓▓▓▓▓███▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▒▒▓▒▒░▒▓████████▓▓▓▓▓▒▒▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▒▓▓▒▒▒▒░░░░░░░░░░\n▓▓▓██▓██▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒░░▓██████████████▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▓▓▓▒▒▒░░░░░░░░░░\n▓▓█▓▓██▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▒▒░▒▓█████████████████▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▒▓▓▓▓▒▒▒▒░░░░░░░░\n▓█▓▓██▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▒░░▒████████████████▓▓███▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▒▒▒▒░░░░░░\n█▓▓██▓▓▓▓▓▒▓███▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░▒████████████████▓▓▓▓██▓▒▒▓▓▓▓▓▓█▓░▓█▓▓▓▓▓▒▒▒▒░░░░░\n█▓██▓▓▓▓▓▓▓███▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒░░▒███████████████▓▓▓▓▓▒▒▒▓▓▒▓▓▓▓▓▓█▓▒▓██▓▓▓▓▒▒▒▒░░░░░\n███▓▓▓▓▓▓▓▓▓█▓▓▓▒▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒░░░▒█████████████▓▓▓▓▒▒▒▒▒░▒▓▓▒▓▓▓▓██▒▒████▓▓▓▓▒▒▒░░░░░\n███▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒░░░░▓███████████▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓████▒▓████▓▓▓▓▒▒▒░░░░░\n█▓▓▓▓▓▓█▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░▒▓█▓███████████▓▓▓▓▓▓▓▒▒░▒▓█▓▓▓███▓▒▓████▓▓▓▓▓▒▒░░░░░\n█▓▓▓▓███▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▓▓▒▒▒▒▒▒░░░░▒▓▓▓▓██████▓▓██▓▓▓▓▓▒▒▒▒▒▒▓▓█▓▓███▓▒█████▓▓▓▓▓▒▒░░░░░\n██▓▓████▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░▓▓▓▓▓▓▓▓▓██▓▓▓█▓▓▓▓▓▒▒▒▒▒░▒▒▓▓▓▓▓▓▒▒██████▓▓▓▓▓▒▒░░░░\n█▓██████▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒░░░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓█▓▓▓▒▓▓█████▓▓▓▓▓▓▒▒░░░\n███████▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▓▒▒▒▒▒░░░▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▓▓▓█▓▓▓▓▓▓▓▓▓▓▒▒░░\n██████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▒▒▒░░▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░\n█████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▒▒▒░▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒\n█████▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▒▒▒▒░░▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n████▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n███▓▒▒▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n██▓▒▒▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n██▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▒▓▒▒▒▒▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n█▓▒▒▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▒▒▓▒▒▒▓▓▓▓▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓▓▓█████▓▓▓▓▓▓▓▓▓▓\n▓▓▒▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▒▒▒▒▓▓▓▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▓▓▒▒▒▓██████▓▓▓▓▓▓▓▓▓▓▓\n▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▒▒▓▓█▓▓▓▓▓███████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▓▓▓▒▒▒▓████▓▓▓▓▓▓▓▓▓████\n▓▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓█████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▒▒▓████▓▓▓▓▓▓▓▓█████\n▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓██▓▓▓▓▓███████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓█████████████████\n▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▒▒▓▓▓▓██▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓█████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▒▓▓▓▓█▓▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓█████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███▓▓▓▓▓▓███▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▒▒█████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████▓▓▓▓▓▓██▓▓▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▒▒▓████████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓█▓▓▓██▓████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▒▒▒▓███████████████\n▒▓▓▓▓▓▓▓▓▓▓▓▓█▓████████▓▓▓▓▓▓▓▓▓▓███████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓███████▓▓█\n▓▓▓▓▓▓▓▓▓▓▓▓██▓█████████▓▓▓▓▓█▓▓▓████████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒\n▒▓▓▓▓▓▓▓▓▓███████████████▓▓▒▓▓▓▓▓█████████▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒░░\n▒▓▓▓▓▓▓▓▓█████████████████▓▓▒▓▓▓▓▓████████▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒░░\n▒▓▓▓▓▒▓▓███████████████████▓▓▓▓▓▓▓█████████▓▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒░\n▒▓▓▓▓▓▓█████████████████████▓▓▒▓▓▓▓▓███████▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░▒▓▓▓▓▓▓▓▓▒▒▒▒\n▒▓▓▓▒▓██████▓████████████████▓▓▒▒▓▓▓███████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒▒▒▓\n▒▓▓▒▓▓████████████████████████▓▓▒▒▓▓███████▓██████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓\n▒▒▓▓▓██████████████████████████▓▓▒▒▓▓██████▓▓██████████▓▓▓▓▓▓▓▓▓▓▓▓▓████████▒▓█▓▓▓██████▓▓\n▒▒▓▓▓███████████████████████████▓▓▒▒▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓██████████▓▓███▓▓███████\n▒▒▓▓█████████████████████████████▓▓▒▒▓▓▓███████████████▓▓▓▓▓▓▓▓▓▓████████████▒▓████▓▓▓▓▓▓▓\n▒▒▒▓█████████████████████████████▓▓▓▒▒▓▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓███▓▓▓▓▒▒▓▓▓▓▒▓▒▒▓▓▓\n▒▒▒▓████████████████████████████▓▓▓▓▓▒▒▓▓▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▒▒▒▒▒░▒\n*/\n\n\n// @version 1.0","created_at":1749555581146,"id":"iLknhn7_Livv","collection":"user"},"7Kchl9C7QR_H":{"code":"setCps(150/60/4)\n\nsamples('github:algorave-dave/samples')\nsamples('github:tidalcycles/dirt-samples')\n\nconst Structures = [\n  \"{x ~!6 x ~ ~ x ~!3 x ~}%16\",\n  \"{x*4}\",\n  \"{~}\",\n]\n\nconst PG = [\n  \"{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}\",\n  \"{0.3 0.8}%8\",\n  \"{0.8}\"\n]\n\nconst beat = 1\n\nDRUMS: stack(\n  s(\"tech:5\").postgain(5).pcurve(2).pdec(1).struct(pick(Structures, beat)),\n  s(\"[ ~ cp]\").bank(\"KorgDDM110\").speed(1).fast(2).postgain(0.15).lpf(3000),\n// ---\n\n  s(\"breaks165\").gain(0.6).loopAt(1).chop(16).fit().postgain(pick(PG, beat)),\n  \n)\n._punchcard({width: 600})\nBASSLINE: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n.struct(\"x*16\")\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(0.075).gain(0.75) .hpf(150)\n.lpf(slider(2000, 350, 2000))\n.postgain(pick(PG, beat))\n\n// _BASSLINEOFFBEAT: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"x*16\")\n// .early(0.125)  // Shifts 1/8th note ahead - creates off-beat feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(0.075).gain(0.75).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\n// _BASSLINEPOLY: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"{~ x x ~ x ~ ~ x}%8\")  // Creates a 3-against-4 feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(5).gain(1).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\nVOXCHOP1: s(\"heartbeat:0\".slow(2))\n.note(\"g#1\")\n.slice(8, \"<5 6>\".fast(2))\n.chop(32).cut(1).loopAt(4)\n.room(2)\n.gain(\"<0.6 1.6>\".slow(2))\n.lpf(slider(3279.2, 600, 4000))\n.postgain(pick(PG, beat))\n._scope({width: 600})\nVOXCHOP2: s(\"heartbeat:<1 0>\".slow(2))\n.striate(\"<2 4>\".slow(2)).ply(\"[4|8]\".fast(8))\n.note(\"a1\")\n.phaser(8).room(2).rfade(30)\n.cut(1).clip(1)\n.lpf(slider(5000, 600, 5000))\n.postgain(1.75)\n.room(1)\n._scope({width: 600})\n// all(x=> x.cut(2))","created_at":1749555797145,"id":"7Kchl9C7QR_H","collection":"user"},"p4kBIkP06a0B":{"code":"setCps(150/60/4)\n\nsamples('github:algorave-dave/samples')\nsamples('github:tidalcycles/dirt-samples')\n\nconst Structures = [\n  \"{x ~!6 x ~ ~ x ~!3 x ~}%16\",\n  \"{x*4}\",\n  \"{~}\",\n]\n\nconst PG = [\n  \"{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}\",\n  \"{0.3 0.8}%8\",\n  \"{0.8}\"\n]\n\nconst beat = 1\n\nDRUMS: stack(\n  s(\"tech:5\").postgain(5).pcurve(2).pdec(1).struct(pick(Structures, beat)),\n  s(\"[ ~ cp]\").bank(\"KorgDDM110\").speed(1).fast(2).postgain(0.15).lpf(3000),\n// ---\n\n  s(\"breaks165\").gain(0.4).loopAt(1).chop(16).fit().postgain(pick(PG, beat)),\n  \n)\n._punchcard({width: 600})\nBASSLINE: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n.struct(\"x*16\")\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(0.075).gain(0.75) .hpf(150)\n.lpf(slider(2000, 350, 2000))\n.postgain(pick(PG, beat))\n\n_BASSLINEOFFBEAT: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n.struct(\"x*16\")\n.early(0.125)  // Shifts 1/8th note ahead - creates off-beat feel\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(0.075).gain(0.75).hpf(150)\n.lpf(slider(2000, 350, 2000))\n.postgain(pick(PG, beat))\n\n_BASSLINEPOLY: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n.struct(\"{~ x x ~ x ~ ~ x}%8\")  // Creates a 3-against-4 feel\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(5).gain(1).hpf(150)\n.lpf(slider(1222.85, 350, 2000))\n.postgain(pick(PG, beat))\n\nVOXCHOP1: s(\"heartbeat:0\".slow(2))\n.note(\"g#1\")\n.slice(8, \"<5 6>\".fast(2))\n.chop(32).cut(1).loopAt(4)\n.room(2)\n.gain(\"<0.6 1.6>\".slow(2))\n.lpf(slider(600, 600, 4000))\n.postgain(pick(PG, beat))\n._scope({width: 600})\nVOXCHOP2: s(\"heartbeat:<1 0>\".slow(2))\n.striate(\"<2 4>\".slow(2)).ply(\"[4|8]\".fast(8))\n.note(\"a1\")\n.phaser(8).room(2).rfade(30)\n.cut(1).clip(1)\n.lpf(slider(600, 600, 5000))\n.postgain(1.75)\n.room(1)\n._scope({width: 600})\n// all(x=> x.cut(2))","created_at":1749596592735,"id":"p4kBIkP06a0B","collection":"user"},"XnOjjbNc0nk1":{"code":"//@title djdave remake \n\n// ====================================\n// CUSTOMIZABLE VARIABLES SECTION\n// ====================================\n// Edit these values to quickly change your performance:\n\n// Tempo (cycles per second)\nconst tempo = 150/60/4  // Current: 150 BPM divided by 60, divided by 4\n\n// Beat selector (0, 1, or 2 for different drum patterns)\nconst beat = 1\n\n// Bassline filter cutoff\nconst bassFilter = 2000  // Range: 350-2000\n\n// Vox chop filters\nconst vox1Filter = 4000  // Range: 600-4000\nconst vox2Filter = 5000  // Range: 600-5000\n\n// Global effect toggle (true = on, false = off)\nconst globalEffectOn = false\n\n// ====================================\n// ORIGINAL CODE\n// ====================================\n\nsetCps(tempo)\nsamples('github:algorave-dave/samples')\nsamples('github:tidalcycles/dirt-samples')\n\nconst Structures = [\n  \"{x ~!6 x ~ ~ x ~!3 x ~}%16\",\n  \"{x*4}\",\n  \"{~}\",\n]\n\nconst PG = [\n  \"{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}\",\n  \"{0.3 0.8}%8\",\n  \"{0.8}\"\n]\n\nDRUMS: stack(\n  s(\"tech:5\").postgain(5).pcurve(2).pdec(1).struct(pick(Structures, beat)),\n  s(\"[ ~ cp]\").bank(\"KorgDDM110\").speed(1).fast(2).postgain(0.15).lpf(3000),\n// ---\n  s(\"breaks165\").gain(0.4).loopAt(1).chop(16).fit().postgain(pick(PG, beat)),\n  \n)\n._punchcard({width: 600})\n\n_BASSLINE: note(\"[e2*3@3 -]@2 f3 e3\".slow(8))\n  .s(\"sine\")\n  .fm(\"-.08\")\n  .fmattack(\"[.1 .4]\")\n  .fmh(\"1.4\")\n  .distort(\"2.8:4\")\n  // .adsr(\"0:.5:0:.8\")\n  .penv(\"-.5\")\n  .gain(\"-10\")\n  // .transpose(\"[-4 -16]/8\")\n.struct(\"x*16\")\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(0.075).gain(0.75) .hpf(150)\n.lpf(slider(bassFilter, 350, 2000))\n.postgain(pick(PG, beat))\n._pianoroll({width: 600})  // Added visualization\n\n// _BASSLINEOFFBEAT: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"x*16\")\n// .early(0.125)  // Shifts 1/8th note ahead - creates off-beat feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(0.075).gain(0.75).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\n// _BASSLINEPOLY: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"{~ x x ~ x ~ ~ x}%8\")  // Creates a 3-against-4 feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(5).gain(1).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\nVOXCHOP1: s(\"heartbeat:0\".slow(2))\n.note(\"e1\")\n.slice(8, \"<5 6>\".fast(2))\n.chop(32).cut(1).loopAt(4)\n.room(2)\n.gain(\"<0.6 1.6>\".slow(2))\n.lpf(slider(vox1Filter, 600, 4000))\n.postgain(pick(PG, beat))\n._spiral({\n  stretch: 4,      // More rotations for 3D depth\n  thickness: 8,    // Thicker lines\n  color: \"cyan\",   // Cool color\n  width: 600\n})\n\nVOXCHOP2: s(\"heartbeat:<1 0>\".slow(2))\n.striate(\"<2 4>\".slow(2)).ply(\"[4|8]\".fast(8))\n.note(\"e1\")\n.phaser(8).room(2).rfade(30)\n.cut(1).clip(1)\n.lpf(slider(vox2Filter, 600, 5000))\n.postgain(1.75)\n.room(1)\n._spectrum({\n  thickness: 5,     // Thick bars\n  speed: 2,         // Animation speed\n  min: -60,         // Min dB for dynamic range\n  max: 10,          // Max dB\n  width: 600\n})\n\n// ====================================\n// GLOBAL EFFECT (TOGGLE)\n// ====================================\n// Change globalEffectOn to false at the top to disable\nglobalEffectOn && all(x=> x.cut(2))","created_at":1749601435341,"id":"XnOjjbNc0nk1","collection":"user"},"xa9E8gsRq1B1":{"code":"//@title break convolution @by Switch Angel\nawait samples('github:switchangel/breaks')\nawait samples('github:switchangel/pad')\ns(\"breaks:1\").loopAt(2).fit().hpf(0).room(.4).roomsize(.3).ir(\"swpad:5/2\")","created_at":1749603435555,"id":"xa9E8gsRq1B1","collection":"user"},"k24b0cjAkBpb":{"code":"//@title breakS @by Osc (switch angel)\n\nsetGainCurve(x => Math.pow(x, 2))\n\nsetCps(170/60/4)        \nawait samples('github:switchangel/breaks')\nawait samples('github:switchangel/pad')\n\n$drums: s(\"breaks:0/2\").fit()\n  .scrub(\"0@5 .625@3\")\n  .scrub(irand(16).seg(8).div(16))\n  .rib(52, 4)\n  .sometimesBy(0.15, ply(\"2 | 4\"))\n  .room(.3).roomsize(.2)\n  .ir(\"swpad:0\")\n  // .coarse(8)\n  .orbit(1)\n  ._punchcard({height:20})\n\n$pad: s(\"swpad:4\")\n  .scrub(\"<.6 .2>@2 .4@3 .5@3\")\n  .gain(1)\n  // .att(.25)\n  .room(.3).roomsize(.2)\n  .orbit(3)\n  \n$bass: note(\"<g# f c d~ [f2@7 g2] g#2 c a#2>\".sub(12))\n  .slow(2)\n  .struct(\"{x!7 x@2 x!7}%8\").clip(.86)\n  .s(\"supersaw\").detune(rand.mul(.6))\n  .lpf(100).lpenv(2).lpd(.3).lpa(.02)\n  .distort(\"4:.4\")\n  .orbit(2)._scope()","created_at":1749604192258,"id":"k24b0cjAkBpb","collection":"user"},"u9FLgDE-QPHk":{"code":"// ====================================\n// CUSTOMIZABLE VARIABLES SECTION\n// ====================================\n// Edit these values to quickly change your performance:\n\n// Tempo (cycles per second)\nconst tempo = 150/60/4  // Current: 150 BPM divided by 60, divided by 4\n\n// Beat selector (0, 1, or 2 for different drum patterns)\nconst beat = 1\n\n// Bassline filter cutoff\nconst bassFilter = 2000  // Range: 350-2000\n\n// Vox chop filters\nconst vox1Filter = 4000  // Range: 600-4000\nconst vox2Filter = 5000  // Range: 600-5000\n\n// Global effect toggle (true = on, false = off)\nconst globalEffectOn = false\n\n// ====================================\n// ORIGINAL CODE\n// ====================================\n\nsetCps(tempo)\nsamples('github:algorave-dave/samples')\nsamples('github:tidalcycles/dirt-samples')\n\nconst Structures = [\n  \"{x ~!6 x ~ ~ x ~!3 x ~}%16\",\n  \"{x*4}\",\n  \"{~}\",\n]\n\nconst PG = [\n  \"{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}\",\n  \"{0.3 0.8}%8\",\n  \"{0.8}\"\n]\n\nDRUMS: stack(\n  s(\"tech:5\").postgain(5).pcurve(2).pdec(1).struct(pick(Structures, beat)),\n  s(\"[ ~ cp]\").bank(\"KorgDDM110\").speed(1).fast(2).postgain(0.15).lpf(3000),\n// ---\n  s(\"breaks165\").gain(0.4).loopAt(1).chop(16).fit().postgain(pick(PG, beat)),\n  \n)\n._punchcard({width: 600})\n\nBASSLINE: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n.struct(\"x*16\")\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(0.075).gain(0.75) .hpf(150)\n.lpf(slider(bassFilter, 350, 2000))\n.postgain(pick(PG, beat))\n._pianoroll({width: 600})  // Added visualization\n\n// _BASSLINEOFFBEAT: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"x*16\")\n// .early(0.125)  // Shifts 1/8th note ahead - creates off-beat feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(0.075).gain(0.75).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\n// _BASSLINEPOLY: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"{~ x x ~ x ~ ~ x}%8\")  // Creates a 3-against-4 feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(5).gain(1).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\nVOXCHOP1: s(\"heartbeat:0\".slow(2))\n.note(\"g#1\")\n.slice(8, \"<5 6>\".fast(2))\n.chop(32).cut(1).loopAt(4)\n.room(2)\n.gain(\"<0.6 1.6>\".slow(2))\n.lpf(slider(vox1Filter, 600, 4000))\n.postgain(pick(PG, beat))\n\nVOXCHOP2: s(\"heartbeat:<1 0>\".slow(2))\n.striate(\"<2 4>\".slow(2)).ply(\"[4|8]\".fast(8))\n.note(\"a1\")\n.phaser(8).room(2).rfade(30)\n.cut(1).clip(1)\n.lpf(slider(vox2Filter, 600, 5000))\n.postgain(1.75)\n.room(1)\n\n// ====================================\n// HYDRA VISUALIZATIONS (CRAZY 3D)\n// ====================================\nawait initHydra()\n\n// VOXCHOP1 - Spiral tunnel\nosc(20, 0.1, 1.5)\n  .rotate(() => time * 0.1)\n  .kaleid(6)\n  .color(0.5, 0.8, 1)\n  .rotate(() => Math.sin(time * 0.5) * 0.5)\n  .modulateRotate(osc(10, 0.1), 2)\n  .scale(() => 1 + Math.sin(time * 2) * 0.2)\n  .repeat(3, 3)\n  .modulateKaleid(osc(11, 0.05), 1)\n  .blend(\n    src(o0)\n      .scale(1.01)\n      .rotate(-0.01)\n      .color(1, 0.9, 0.8)\n      .saturate(0.8),\n    0.9\n  )\n  .out(o0)\n\n// VOXCHOP2 - Fractal feedback\nsrc(o1)\n  .scale(() => 1.01 + Math.sin(time * 3) * 0.05)\n  .rotate(() => Math.sin(time * 0.05) * 0.1)\n  .pixelate(() => 50 + Math.sin(time * 2) * 30, () => 50 + Math.sin(time * 2) * 30)\n  .color(0.9, 0.2, 1)\n  .modulateScale(\n    noise(3, 0.1)\n      .rotate(() => time * 0.2)\n      .scale(() => 1 + Math.sin(time * 1.5) * 0.5),\n    0.5\n  )\n  .diff(\n    osc(30, 0.1, 1)\n      .color(0, 1, 0.5)\n      .rotate(() => time * -0.1)\n      .kaleid(4)\n  )\n  .blend(o1, 0.85)\n  .out(o1)\n\n// Composite both visuals\nsrc(o0)\n  .blend(o1, () => 0.5 + Math.sin(time) * 0.3)\n  .contrast(1.2)\n  .saturate(1.1)\n  .out()\n\n// ====================================\n// GLOBAL EFFECT (TOGGLE)\n// ====================================\n// Change globalEffectOn to false at the top to disable\nglobalEffectOn && all(x=> x.cut(2))","created_at":1749605504520,"id":"u9FLgDE-QPHk","collection":"user"},"eJzl_An_deGs":{"code":"//@title breakS @by Osc (switch angel)\n\nsetGainCurve(x => Math.pow(x, 2))\n\nsetCps(170/60/4)        \nawait samples('github:switchangel/breaks')\nawait samples('github:switchangel/pad')\n\n$drums: s(\"breaks:1/2\").fit()\n  .scrub(\"0@5 .625@3\")\n  .scrub(irand(16).seg(8).div(16))\n  .rib(52, 2)\n  .sometimesBy(0.15, ply(\"2 | 4\"))\n  .room(.3).roomsize(.2)\n  .ir(\"swpad:0\")\n  .coarse(2)\n  .orbit(1)\n  ._punchcard({height:20})\n\n$pad: s(\"swpad:2\")\n  .scrub(\"<.6 .2>@2 .4@3 .5@3\")\n  .gain(2)\n  .att(1)\n  .room(.3).roomsize(.2)\n  .orbit(3)\n  \n$bass: note(\"<g# f c d~ [f2@7 g2] g#2 c a#2>\".sub(20))\n  .slow(2)\n  .struct(\"x\").clip(.86)\n  .s(\"supersaw\").detune(rand.mul(.6))\n  .lpf(100).lpenv(2).lpd(.3).lpa(.02)\n  // .distort(\"2:.4\")\n  .orbit(2)._scope()","created_at":1749634002965,"id":"eJzl_An_deGs","collection":"user"},"yFtoOyM00JYr":{"code":"// @title coding club classix instrumental\n// @by bundy/fouté\n// @license CC BY-NC 4.0\n// @url https://soundcloud.com/bundydemos/coding-club-classix\n\nsetcps(131/60/4)\n\nsamples('github:hpunq/samples-strudel')\nsamples('https://shabda.ndre.gr/speech/music.json?gender=f&language=ta-IN&strudel=1')\n\n$: s(\"- - bloodsucka\").mask(\"<1 0 1 0>\").gain(0.2).late(0.03)\n\n$: s(\"bd bd [bd|bd|-|bd - - bd] bd\").bank(\"RolandTR909\").dist(\"2:1\")\n\n$: s(\"- - - sd - - sd - - - - sd - - sd -\").bank(\"OberheimDMX\").gain(1.5).room(0.02).every(8, x=>x.hush())\n\n$: s(\" - - perc:2 - - perc:1\").gain(\"1 1.8\").bank(\"RolandTR808\").sometimesBy(0.2, ply(\"2\")).room(0.2)\n\n$: s(\"music\").chop(16).mul(speed(\"0.7 3\")).gain(2.5).mask(\"0 1\")\n\n$: note(\"[e2*3@3 -]@2 f3 e3\").s(\"sine\")\n  .fm(-.08)\n  .fmattack(\"[.1 .4]\")\n  .fmh(\"1.4\")\n  .dist(\"2.8:4\")\n  .slow(2)\n  .adsr(\"0:.5:0:.8\")\n  .penv(\"-.5\")\n  .gain(6)\n  .lpf(50)\n  .transpose(\"[-4 -16]/8\")\n  .room(0.1)\n  ._punchcard()\n\nawait initHydra()\n\nbpm = 131/2\n\n\nosc(2, 1, 9) \n   .diff(noise(999, 1).contrast(0.3))\n   .repeat([1, 3, 5, 5], [1, 3, 5, 5])\n   .color(0.2, 1.5, 0)\n   .modulateRepeat(noise(2, .1).rotate(3, -.25))\n   .rotate(0, 0.125)\n   .scale(() => Math.sin(time)+1.5 *2)\n   .blend(\n    shape([3, 0], 0.05, 0.5)\n    .repeatY(3)\n    .rotate([0, 0, Math.PI, 0])\n    .color(0.2, 1.5, 0)\n    .saturate(0.6)\n    .scrollY(0, 0.1)\n    .modulate(noise(4, [0.4, -0.4]))\n   )\n   .saturate([0.7, 0.1])\n  .out()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// _$: s(\"kilu\").loopAt(2).chop(\"[32 16 32 8]/2\").mul(speed(\"-2\")).gain(0.2)\n//   .mask(\"1 0 1 0\") // <-- comment this in/out every 8 bars or so\n","created_at":1749657803620,"id":"yFtoOyM00JYr","collection":"user"},"ujaUPIV6XTuS":{"code":"//@title djdave remake \n\n// ====================================\n// CUSTOMIZABLE VARIABLES SECTION\n// ====================================\n// Edit these values to quickly change your performance:\n\n// Tempo (cycles per second)\nconst tempo = 150/60/4  // Current: 150 BPM divided by 60, divided by 4\n\n// Beat selector (0, 1, or 2 for different drum patterns)\nconst beat = 1\n\n// Bassline filter cutoff\nconst bassFilter = 2000  // Range: 350-2000\n\n// Vox chop filters\nconst vox1Filter = 4000  // Range: 600-4000\nconst vox2Filter = 5000  // Range: 600-5000\n\n// Global effect toggle (true = on, false = off)\nconst globalEffectOn = false\n\n// ====================================\n// ORIGINAL CODE\n// ====================================\n\nsetCps(tempo)\nsamples('github:oscarbeamish/samples')\nsamples('github:tidalcycles/dirt-samples')\n\nconst Structures = [\n  \"{x ~!6 x ~ ~ x ~!3 x ~}%16\",\n  \"{x*4}\",\n  \"{~}\",\n]\n\nconst PG = [\n  \"{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}\",\n  \"{0.3 0.8}%8\",\n  \"{0.8}\"\n]\n\nDRUMS: stack(\n  s(\"tech:5\").postgain(5).pcurve(2).pdec(1).struct(pick(Structures, beat)),\n  s(\"[ ~ cp]\").bank(\"KorgDDM110\").speed(1).fast(2).postgain(0.15).lpf(3000),\n// ---\n  s(\"breaks165\").gain(0.4).loopAt(1).chop(16).fit().postgain(pick(PG, beat)),\n  \n)\n._punchcard({width: 600})\n\nBASSLINE: note(\"[e2*3@3 -]@2 f3 e3\".slow(8))\n  .s(\"sine\")\n  .fm(-.08)\n  .fmattack(\"[.1 .4]\")\n  .fmh(\"1.4\")\n  .dist(\"2.8:4\")\n  // .adsr(\"0:.5:0:.8\")\n  .penv(\"-.5\")\n  // .gain(6)\n  // .lpf(50)\n  // .transpose(\"[-4 -16]/8\")\n\n.struct(\"x*16\")\n.sustain(\"0.5\")\n.sound(\"[square, sawtoth]\")\n.transpose(\"[-12, 0]\")\n.coarse(2)\n.decay(0.075).gain(0.75) .hpf(150)\n.lpf(slider(bassFilter, 350, 2000))\n.postgain(pick(PG, beat))\n._pianoroll({width: 600})  // Added visualization\n\n// _BASSLINEOFFBEAT: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"x*16\")\n// .early(0.125)  // Shifts 1/8th note ahead - creates off-beat feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(0.075).gain(0.75).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\n// _BASSLINEPOLY: note(\"f#3@8 c#3@3 d3@5 a3@8 c#3@3 d3@5 f#2@8 c#3@3 d3@5 d2@8 d3@3 c#3@5\".slow(8))\n// .struct(\"{~ x x ~ x ~ ~ x}%8\")  // Creates a 3-against-4 feel\n// .sustain(\"0.5\")\n// .sound(\"[square, sawtoth]\")\n// .transpose(\"[-12, 0]\")\n// .coarse(2)\n// .decay(5).gain(1).hpf(150)\n// .lpf(slider(2000, 350, 2000))\n// .postgain(pick(PG, beat))\n\nVOXCHOP1: s(\"heartbeat:0\".slow(2))\n.note(\"e1\")\n.slice(8, \"<5 6>\".fast(2))\n.chop(32).cut(1).loopAt(4)\n.room(2)\n.gain(\"<0.6 1.6>\".slow(2))\n.lpf(slider(vox1Filter, 600, 4000))\n.postgain(pick(PG, beat))\n._spiral({\n  stretch: 4,      // More rotations for 3D depth\n  thickness: 8,    // Thicker lines\n  color: \"cyan\",   // Cool color\n  width: 600\n})\n\nVOXCHOP2: s(\"heartbeat:<1 0>\".slow(2))\n.striate(\"<2 4>\".slow(2)).ply(\"[4|8]\".fast(8))\n.note(\"e1\")\n.phaser(8).room(2).rfade(30)\n.cut(1).clip(1)\n.lpf(slider(vox2Filter, 600, 5000))\n.postgain(1.75)\n.room(1)\n._spectrum({\n  thickness: 5,     // Thick bars\n  speed: 2,         // Animation speed\n  min: -60,         // Min dB for dynamic range\n  max: 10,          // Max dB\n  width: 600\n})\n\n// ====================================\n// GLOBAL EFFECT (TOGGLE)\n// ====================================\n// Change globalEffectOn to false at the top to disable\nglobalEffectOn && all(x=> x.cut(2))","created_at":1751302318462,"id":"ujaUPIV6XTuS","collection":"user"},"_hBBDxIW02cy":{"code":"setCps(150/60/4)\n\nsamples('github:algorave-dave/samples')\nsamples('github:tidalcycles/dirt-samples')\n\nconst Structures = [\n  \"{x ~!6 x ~ ~ x ~!3 x ~}%16\",\n  \"{x*4}\",\n  \"{~}\",\n]\n\nconst PG = [\n  \"{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}\",\n  \"{0.3 0.8}%8\",\n  \"{0.8}\"\n]\n\nconst beat = 2\n\nDRUMS: stack(\n  s(\"tech:5\").postgain(5).pcurve(2).pdec(1).struct(pick(Structures, beat)),\n  s(\"[ ~ cp]\").bank(\"KorgDDM110\").speed(1).fast(2).postgain(0.15).lpf(3000),\n// ---\n\n  s(\"breaks165\").gain(0.4).loopAt(1).chop(16).fit().postgain(pick(PG, beat)),\n  \n)\n._punchcard({width: 600})","created_at":1751626270723,"id":"_hBBDxIW02cy","collection":"user"}}